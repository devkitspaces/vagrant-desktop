# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'getoptlong'
require 'yaml'

# ---------------------------------------
# Plugins
# ---------------------------------------
if !Vagrant.has_plugin?('vagrant-vbguest')
  puts 'vagrant-vbguest plugin required. To install simply do `vagrant plugin install vagrant-vbguest`'
  exit
end

# ---------------------------------------
# Libraries
# ---------------------------------------
root_dir = File.dirname(__FILE__)
lib_dir = 'lib'
lib_path = "#{root_dir}/#{lib_dir}"

if File.exist?( lib_path )
  lib_files = Dir.glob( "#{lib_path}/*.rb") 
  lib_files && lib_files.each do |files|
    require_relative "#{lib_dir}/#{File.basename( files, '.rb' )}"
  end
end

# ---------------------------------------
# Header
# ---------------------------------------
Vagrant.require_version ">= 1.6.0"
VAGRANTFILE_API_VERSION = "2"
VAGRANTFILE_LOG_PATH = "/opt/vagrant/provision.log"

# ---------------------------------------
# Parameters
# ---------------------------------------
params = parse_options()

require_arg("name", params['name'])
require_arg("env-file", params['file'])

p_name=params['name']
p_file=params['file']

# ---------------------------------------
# Settings
# ---------------------------------------
deffile = File.expand_path(p_file)
puts "using definition file: #{deffile}"
settings = read_settings(deffile)
validate_settings(settings)

# ---------------------------------------
# Definition
# ---------------------------------------

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  VAGRANT_DOTFILE_PATH = settings['path']

  config.vm.box = settings['box']
  config.vm.hostname = settings['name']
  config.ssh.forward_agent=true  
  

  config.vm.synced_folder "../", "/opt/vagrant"
  config.vm.synced_folder "../../../", "/home/vagrant/repositories"

  # 
  # Virtualbox configuration
  #
  config.vm.provider :virtualbox do |vb|
      vb.gui=true

      vb.name = p_name

      vb.customize ["modifyvm", :id, "--cpus", "2"]
      vb.customize ["modifyvm", :id, "--memory", "2048"]
      vb.customize ["modifyvm", :id, "--graphicscontroller", "vboxvga"]
      vb.customize ["modifyvm", :id, "--vram", "128"]

      vb.customize ["modifyvm", :id, "--hwvirtex", "on"]
      vb.customize ["modifyvm", :id, "--accelerate3d", "on"]
      vb.customize ["modifyvm", :id, "--ioapic", "on"]
  end

  # Prevent TTY Errors (copied from laravel/homestead: "homestead.rb" file)... By default this is "bash -l".
  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"
  
  # ---------------------------------------
  # Provisioning
  # ---------------------------------------  
  # bootstrap.sh
  #
  # bootstrap.sh prepares the environment for the provisioning process.
  config.vm.provision :shell do |sh|
    sh.path = File.join( "provision", "bootstrap.sh" )
    sh.env = { :VAGRANT_LOG => "#{VAGRANTFILE_LOG_PATH}" }
  end

  vagrant_copy_run(config, "Setting up essential components", File.join( "provision", "prepare.sh" ), "")
  
  if File.exists?(File.join('provision','provision-pre.sh')) then
    vagrant_copy_run(config, "Running the pre-hook to the default provisioning script",File.join("provision","provision-pre.sh"),"")
  end

  vagrant_copy_run(config,"Setting up the desktop environment",File.join( "env", "#{settings['desktop']}.bash"),"")

  if File.exists?(File.join('provision','provision.sh')) then
    vagrant_copy_run(config, "Setting up environment specific properties",File.join("provision","provision.sh"),"")
  end

  if File.exists?(File.join('provision','provision-post.sh')) then
    vagrant_copy_run(config, "Running the post-hook to the default provisioning script",File.join("provision","provision-post.sh"),"")
  end

  #
  # End of Provision
  # 
end